---
title: "Clean nomis downloads"
author: "Dave"
format: html
editor: visual
execute:
  output: false
---

## Introduction

In `01_get_census_data_â€¦` we downloaded various tables from nomis and saved them as RDS in `"nomis-downloads"`. We're now going to clean these tables so that they meet our data requirements, saving each table as an RDS and a csv.

## Housekeeping

### Libraries

```{r libs}
library(fs)
library(here)
library(dplyr)
library(janitor)
library(stringr)
library(tidyr)
library(vroom)
```

### Filepaths

```{r filepaths}
in_downloads <- function(...) here("nomis-downloads", ...)
```

## Cleaning Data

### Helpers

#### 1. Remove non-varied columns

Lots of unwanted columns in this data have zero variance. Let's drop these

```{r drop_indistinct}
drop_indistinct <- function(x, keep = geography_typecode){
  
  keep <- enexpr(keep)
  
  select(x, 
         where(\(x) {n_distinct(x) > 1}) | !!keep
         )
}
```

#### 2. Rename `geography_code`

```{r renameGeographyCode}
rename_geography_code <- function(x){
  geo_type <- unique(x[["geography_typecode"]])
  
  if(geo_type == 152){
    x <- rename(x, msoa_2021_code = "geography_code")
  } else if (geo_type == 150) {
    x <- rename(x, oa_2021_code = "geography_code")
  } else(stop("Unexpected geography type code"))
  
  return(x)
  
}
```

#### 3. Drop undesirable columns

```{r dropUndesirable}
drop_undesirable <- function(x){
  select(x, -ends_with("_sortorder"), -urn, -record_offset,
         -geography, -geography_typecode, -geography_name,
         )
}
```

#### 4. Keep values, not percents

```{r keepValues}
keep_values <- function(x){
  filter(x, measures_name == "Value") |> 
    select(-measures_name, -measures)
}
```

### General clean

```{r makeGeneralClean}
general_clean <- function(x){
  clean_names(x) |>
    rename_geography_code() |> 
    drop_indistinct() |> 
    drop_undesirable() |> 
    keep_values()
}
```

### Clean age data

```{r cleaningAgeData}
age_single_year <- readRDS(
  in_downloads("england-wales_age-by-single-year_msoa_2021.RDS"))
age_five_year <- readRDS(
  in_downloads("england-wales_age-five-year-bands_oa_2021.RDS")
)

age_single_year <- general_clean(age_single_year)
age_five_year   <- general_clean(age_five_year)

## Single year ---------------------------------------------------------------------
# Use these codes to get only single-year age values
age_single_year <- filter(age_single_year,
                          c2021_age_102 < 1000,
                          c2021_age_102 > 0)

age_single_year <- select(age_single_year,
                          msoa_2021_code,
                          age = c2021_age_102_name,
                          value  = obs_value)

age_single_year <- mutate(age_single_year, 
                          age =
                            str_to_lower(age) |> 
                            str_replace("aged", "age") |> 
                            str_replace_all("[:space:]", "_"))

age_single_year <- pivot_wider(
  age_single_year,
  names_from = age,
  values_from = value
)

## Five year bands -----------------------------------------------------------------
age_five_year <- filter(age_five_year, c2021_age_19 > 0)

age_five_year <- select(age_five_year,
                        oa_2021_code,
                        age = c2021_age_19_name,
                        value  = obs_value)

age_five_year <- mutate(age_five_year,
                        age =
                          str_to_lower(age) |> 
                          str_replace("aged", "age") |> 
                          str_replace_all("[:space:]", "_") |> 
                          str_remove("_to"))

age_five_year <- pivot_wider(
  age_five_year,
  names_from = age,
  values_from = value
)
```

### Clean ethnicity

We're actually going to keep the generalised categories here, and drop the more specific fields. It's a loss of information but it's very convenient for us long term, since we don't tend to report on, for example, the number of Bangladeshis in an area.

```{r cleanEthnicity}
ethnicity <- readRDS(
  in_downloads("england-wales_ethnicity_oa_2021.RDS")
)

ethnicity <- general_clean(ethnicity)

ethnicity <- filter(ethnicity, c2021_eth_20 > 1000)

ethnicity <- select(ethnicity, 
                    oa_2021_code,
                    ethnicity = c2021_eth_20_name,
                    value = obs_value)

ethnicity <- pivot_wider(ethnicity,
                         names_from = ethnicity,
                         values_from = value)

ethnicity <- clean_names(ethnicity)
```

### Clean religion

```{r cleanReligion}
religion <- readRDS(
  in_downloads("england-wales_religion_oa_2021.RDS")
)

religion <- general_clean(religion)

## remove total_residents_field
religion <- filter(religion, c2021_religion_10 != 0)

religion <- select(religion,
                   oa_2021_code,
                   religion = c2021_religion_10_name,
                   value = obs_value)

religion = pivot_wider(religion,
                        names_from = religion,
                        values_from = value)

religion <- clean_names(religion)
```

### Clean household composition

Again we're going to forget a lot of the fine detail here and just capture the headline statistics

```{r cleanHouseholdcomposition}
household_composition <- readRDS(
  in_downloads("england-wales_household-composition_oa_2021.RDS")
)

household_composition <- general_clean(household_composition)

household_composition <-
  filter(household_composition,
         c2021_hhcomp_15 < 1000,
         c2021_hhcomp_15 != 0)

household_composition <- select(
  household_composition,
  oa_2021_code,
  household_composition = c2021_hhcomp_15_name,
  value = obs_value
)

household_composition <- pivot_wider(household_composition,
                                    names_from = household_composition,
                                    values_from = value)

household_composition <- clean_names(household_composition)
```

### Clean general health

```{r cleanGeneralHealth}
general_health <- readRDS(
  in_downloads("england-wales_general-health_oa_2021.RDS")
)

general_health <- general_clean(general_health)

general_health <- filter(general_health, c2021_health_6 > 0)

general_health <- select(
  general_health,
  oa_2021_code, 
  general_health = c2021_health_6_name,
  value = obs_value
)

general_health <- pivot_wider(general_health,
                              names_from = general_health,
                              values_from = value)

general_health <- clean_names(general_health)

general_health <- rename_with(general_health, str_remove, everything(), "_health")
```

## Save Data

```{r saveData}
census_dir <- function(...) here("census-data_england-and-wales", ...)

save_census_data <- function(x, name, geography = "oa"){
  full_name = str_c("england-wales", name, geography, 2021, sep = "_")
  
  csv_name <- str_c(full_name, ".csv")
  rds_name <- str_c(full_name, ".RDS")
  
  vroom_write(x, census_dir(csv_name), delim = ",")
  saveRDS(x, census_dir(rds_name))
}

save_census_data(age_five_year, "age-five-year")
save_census_data(age_single_year, "age-single-year", "msoa")
save_census_data(ethnicity, "ethnicity")
save_census_data(religion, "religion")
save_census_data(household_composition, "household-composition")
save_census_data(general_health, "general-health")
```
